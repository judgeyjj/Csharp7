<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="referrer" content="origin" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <title>随笔列表第2页 - JohnnyBai - 博客园</title>
    <link type="text/css" rel="stylesheet" href="/bundles/blog-common.css?v=KOZafwuaDasEedEenI5aTy8aXH0epbm6VUJ0v3vsT_Q1"/>
<link id="MainCss" type="text/css" rel="stylesheet" href="/skins/Custom/bundle-Custom.css?v=Z683z9azGWin6jOfOyAHK6FgPVxm_nmCnl3EFztc2eE1"/>
<link type="text/css" rel="stylesheet" href="/blog/customcss/240095.css?v=7rnz5TtMcHt9VmgMA7H%2fK8T8fSI%3d"/>
<link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/Custom/bundle-Custom-mobile.css?v=_msYCBCTPwxsehifP8ZdBI6kxamcIjzp-IKwPnrrPeg1"/>
    <link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/johnny666888/rss"/>
    <link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/johnny666888/rsd.xml"/>
<link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/johnny666888/wlwmanifest.xml"/>
    <script src="//common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script>var currentBlogId=240095;var currentBlogApp='johnny666888',cb_enable_mathjax=false;var isLogined=false;</script>
    <script src="/bundles/blog-common.js?v=smtcUT5dhdu_5eEO8CKHYoVc7DPLgEBGzp6zKkstlzg1" type="text/javascript"></script>
</head>
<body>
<a name="top"></a>


<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
	<a id="lnkBlogLogo" href="http://www.cnblogs.com/johnny666888/"><img id="blogLogo" src="/Skins/custom/images/logo.gif" alt="返回主页" /></a>			
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle" href="https://www.cnblogs.com/johnny666888/">求知</a></h1>
<h2></h2>



		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">博客园</a></li>
<li><a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/johnny666888/">首页</a></li>
<li><a id="blog_nav_newpost" class="menu" rel="nofollow" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">新随笔</a></li>
<li><a id="blog_nav_contact" class="menu" rel="nofollow" href="https://msg.cnblogs.com/send/JohnnyBai">联系</a></li>
<li><a id="blog_nav_rss" class="menu" href="https://www.cnblogs.com/johnny666888/rss">订阅</a>
<!--<a id="blog_nav_rss_image" class="aHeaderXML" href="https://www.cnblogs.com/johnny666888/rss"><img src="//www.cnblogs.com/images/xml.gif" alt="订阅" /></a>--></li>
<li><a id="blog_nav_admin" class="menu" rel="nofollow" href="https://i.cnblogs.com/">管理</a></li>
</ul>
		<div class="blogStats">
			
			<div id="blog_stats">
<span id="stats_post_count">随笔 - 50&nbsp; </span>
<span id="stats_article_count">文章 - 1&nbsp; </span>
<span id="stats-comment_count">评论 - 4</span>
</div>
			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		
        
<!--done-->
<div id="homepage_top_pager" class="topicListFooter"><div class="pager">
	共5页:&nbsp;<a href="https://www.cnblogs.com/johnny666888/default.html?page=1">上一页</a>&nbsp;<a href="https://www.cnblogs.com/johnny666888/default.html?page=1">1</a>&nbsp;2&nbsp;<a href="https://www.cnblogs.com/johnny666888/default.html?page=3">3</a>&nbsp;<a href="https://www.cnblogs.com/johnny666888/default.html?page=4">4</a>&nbsp;<a href="https://www.cnblogs.com/johnny666888/default.html?page=5">5</a>&nbsp;<a href="https://www.cnblogs.com/johnny666888/default.html?page=3">下一页</a>&nbsp;
</div></div>

<div class="day">
	<div class="dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl00_ImageLink" href="http://www.cnblogs.com/johnny666888/archive/2019/08/06.html">2019年8月6日</a>				  
	</div>

	
			<div class="postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl00_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/johnny666888/p/11285540.html">spark shuffle写操作三部曲之SortShuffleWriter</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 提出问题 1. spark shuffle的预聚合操作是如何做的，其中底层的数据结构是什么？在数据写入到内存中有预聚合，在读溢出文件合并到最终的文件时是否也有预聚合操作？ 2. shuffle数据的排序是如何做的？ 分区内的数据是否是有序的？若有序，spark 内部是按照什么排序算法来排序每一个分区<a href="https://www.cnblogs.com/johnny666888/p/11285540.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2019-08-06 23:44 JohnnyBai 阅读(472) 评论(0)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=11285540" rel="nofollow">编辑</a></div>
			<div class="clear"></div>
		
</div>


<div class="day">
	<div class="dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl01_ImageLink" href="http://www.cnblogs.com/johnny666888/archive/2019/08/04.html">2019年8月4日</a>				  
	</div>

	
			<div class="postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl01_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/johnny666888/p/11291546.html">spark shuffle写操作三部曲之UnsafeShuffleWriter</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 前言 在前两篇文章&#160;spark shuffle的写操作之准备工作&#160;中引出了spark shuffle的三种实现，spark shuffle写操作三部曲之BypassMergeSortShuffleWriter&#160;讲述了BypassMergeSortShuffleWriter 用于shuffle写操作的<a href="https://www.cnblogs.com/johnny666888/p/11291546.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2019-08-04 23:23 JohnnyBai 阅读(450) 评论(0)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=11291546" rel="nofollow">编辑</a></div>
			<div class="clear"></div>
		
</div>


<div class="day">
	<div class="dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl02_ImageLink" href="http://www.cnblogs.com/johnny666888/archive/2019/08/03.html">2019年8月3日</a>				  
	</div>

	
			<div class="postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl02_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/johnny666888/p/11291592.html">spark shuffle写操作三部曲之BypassMergeSortShuffleWriter</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 前言 再上一篇文章&#160;spark shuffle的写操作之准备工作&#160;中，主要介绍了 spark shuffle的准备工作，本篇文章主要介绍spark shuffle使用BypassMergeSortShuffleWriter写数据详细细节。 在本篇文章中如果有不了解的术语，也可以参照&#160;spark sh<a href="https://www.cnblogs.com/johnny666888/p/11291592.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2019-08-03 07:00 JohnnyBai 阅读(307) 评论(0)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=11291592" rel="nofollow">编辑</a></div>
			<div class="clear"></div>
		
</div>


<div class="day">
	<div class="dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl03_ImageLink" href="http://www.cnblogs.com/johnny666888/archive/2019/08/02.html">2019年8月2日</a>				  
	</div>

	
			<div class="postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl03_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/johnny666888/p/11265502.html">spark shuffle的写操作之准备工作</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 前言 在前三篇文章中，spark 源码分析之十九 -- DAG的生成和Stage的划分&#160;剖析了DAG的构建和Stage的划分，spark 源码分析之二十 -- Stage的提交&#160;剖析了TaskSet任务的提交，以及spark 源码分析之二十一 -- Task的执行细节剖析了Task执行的整个流程。在<a href="https://www.cnblogs.com/johnny666888/p/11265502.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2019-08-02 22:59 JohnnyBai 阅读(350) 评论(0)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=11265502" rel="nofollow">编辑</a></div>
			<div class="clear"></div>
		
</div>


<div class="day">
	<div class="dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl04_ImageLink" href="http://www.cnblogs.com/johnny666888/archive/2019/07/31.html">2019年7月31日</a>				  
	</div>

	
			<div class="postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl04_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/johnny666888/p/11277947.html">spark 源码分析之二十二-- Task的内存管理</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 问题的提出 本篇文章将回答如下问题： 1. spark任务在执行的时候，其内存是如何管理的？ 2. 堆内内存的寻址是如何设计的？是如何避免由于JVM的GC的存在引起的内存地址变化的？其内部的内存缓存池回收机制是如何设计的？ 3. 堆外和堆内内存分别是通过什么来分配的？其数据的偏移量是如何计算的？ 4<a href="https://www.cnblogs.com/johnny666888/p/11277947.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2019-07-31 23:43 JohnnyBai 阅读(389) 评论(0)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=11277947" rel="nofollow">编辑</a></div>
			<div class="clear"></div>
		
</div>


<div class="day">
	<div class="dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl05_ImageLink" href="http://www.cnblogs.com/johnny666888/archive/2019/07/29.html">2019年7月29日</a>				  
	</div>

	
			<div class="postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl05_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/johnny666888/p/11256493.html">spark 源码分析之二十一 -- Task的执行流程</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 引言 在上两篇文章&#160;spark 源码分析之十九 -- DAG的生成和Stage的划分 和&#160;spark 源码分析之二十 -- Stage的提交&#160;中剖析了Spark的DAG的生成，Stage的划分以及Stage转换为TaskSet后的提交。 如下图，我们在前两篇文章中剖析了DAG的构建，Stage的划分<a href="https://www.cnblogs.com/johnny666888/p/11256493.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2019-07-29 19:19 JohnnyBai 阅读(508) 评论(0)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=11256493" rel="nofollow">编辑</a></div>
			<div class="clear"></div>
		
</div>


<div class="day">
	<div class="dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl06_ImageLink" href="http://www.cnblogs.com/johnny666888/archive/2019/07/28.html">2019年7月28日</a>				  
	</div>

	
			<div class="postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl06_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/johnny666888/p/11259944.html">Spark 源码分析系列</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 如下，是 spark 相关系列的一些文章汇总，持续更新中...... Spark RPC spark 源码分析之五--Spark RPC剖析之创建NettyRpcEnv spark 源码分析之六--Spark RPC剖析之Dispatcher和Inbox、Outbox剖析 spark 源码分析之七-<a href="https://www.cnblogs.com/johnny666888/p/11259944.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2019-07-28 16:58 JohnnyBai 阅读(896) 评论(0)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=11259944" rel="nofollow">编辑</a></div>
			<div class="clear"></div>
		
</div>


<div class="day">
	<div class="dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl07_ImageLink" href="http://www.cnblogs.com/johnny666888/archive/2019/07/26.html">2019年7月26日</a>				  
	</div>

	
			<div class="postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl07_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/johnny666888/p/11251642.html">spark 源码分析之二十 -- Stage的提交</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 引言 上篇&#160;spark 源码分析之十九 -- DAG的生成和Stage的划分&#160;中，主要介绍了下图中的前两个阶段DAG的构建和Stage的划分。 本篇文章主要剖析，Stage是如何提交的。 rdd的依赖关系构成了DAG，DAGScheduler根据shuffle依赖关系将DAG图划分为一个一个小的st<a href="https://www.cnblogs.com/johnny666888/p/11251642.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2019-07-26 19:48 JohnnyBai 阅读(346) 评论(0)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=11251642" rel="nofollow">编辑</a></div>
			<div class="clear"></div>
		
</div>


<div class="day">
	<div class="dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl08_ImageLink" href="http://www.cnblogs.com/johnny666888/archive/2019/07/25.html">2019年7月25日</a>				  
	</div>

	
			<div class="postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl08_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/johnny666888/p/11233982.html">spark 源码分析之十九 -- DAG的生成和Stage的划分</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 上篇文章&#160;spark 源码分析之十八 -- Spark存储体系剖析&#160;重点剖析了 Spark的存储体系。从本篇文章开始，剖析Spark作业的调度和计算体系。 在说DAG之前，先简单说一下RDD。 对RDD的整体概括 文档说明如下： RDD全称Resilient Distributed Dataset，<a href="https://www.cnblogs.com/johnny666888/p/11233982.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2019-07-25 19:08 JohnnyBai 阅读(781) 评论(0)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=11233982" rel="nofollow">编辑</a></div>
			<div class="clear"></div>
		
</div>


<div class="day">
	<div class="dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl09_ImageLink" href="http://www.cnblogs.com/johnny666888/archive/2019/07/23.html">2019年7月23日</a>				  
	</div>

	
			<div class="postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl09_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/johnny666888/p/11226984.html">spark 源码分析之十八 -- Spark存储体系剖析</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 本篇文章主要剖析BlockManager相关的类以及总结Spark底层存储体系。 总述 先看 BlockManager相关类之间的关系如下： 我们从NettyRpcEnv 开始，做一下简单说明。 NettyRpcEnv是Spark 的默认的RpcEnv实现，它提供了个Spark 集群各个节点的底层通<a href="https://www.cnblogs.com/johnny666888/p/11226984.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2019-07-23 19:09 JohnnyBai 阅读(409) 评论(0)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=11226984" rel="nofollow">编辑</a></div>
			<div class="clear"></div>
		
</div>

<div class="topicListFooter"></div><div id="homepage1_HomePageDays_homepage_bottom_pager" class="topicListFooter"><div class="pager">
	共5页:&nbsp;<a href="https://www.cnblogs.com/johnny666888/default.html?page=1">上一页</a>&nbsp;<a href="https://www.cnblogs.com/johnny666888/default.html?page=1">1</a>&nbsp;2&nbsp;<a href="https://www.cnblogs.com/johnny666888/default.html?page=3">3</a>&nbsp;<a href="https://www.cnblogs.com/johnny666888/default.html?page=4">4</a>&nbsp;<a href="https://www.cnblogs.com/johnny666888/default.html?page=5">5</a>&nbsp;<a href="https://www.cnblogs.com/johnny666888/default.html?page=3">下一页</a>&nbsp;
</div></div>

    
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<!--done-->
<div class="newsItem">
<h3 class="catListTitle">公告</h3>
	<div id="blog-news"></div><script type="text/javascript">loadBlogNews();</script>
</div>

			<div id="blog-calendar" style="display:none"></div><script type="text/javascript">loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div><script type="text/javascript">loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		
<!--done-->
Copyright &copy;2020 JohnnyBai
	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->

</body>
</html>
