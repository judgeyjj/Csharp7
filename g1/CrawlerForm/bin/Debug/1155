<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="referrer" content="origin" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <title>随笔列表第2页 - 句幽 - 博客园</title>
    <link type="text/css" rel="stylesheet" href="/bundles/blog-common.css?v=KOZafwuaDasEedEenI5aTy8aXH0epbm6VUJ0v3vsT_Q1"/>
<link type="text/css" rel="stylesheet" href="/blog/customcss/401017.css?v=TZbXpieXQG%2f10X3L0iBgILcLZKA%3d"/>
<link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/Custom/bundle-Custom-mobile.css?v=_msYCBCTPwxsehifP8ZdBI6kxamcIjzp-IKwPnrrPeg1"/>
    <link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/uoyo/rss"/>
    <link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/uoyo/rsd.xml"/>
<link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/uoyo/wlwmanifest.xml"/>
    <script src="//common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script>var currentBlogId=401017;var currentBlogApp='uoyo',cb_enable_mathjax=false;var isLogined=false;</script>
    <script src="/bundles/blog-common.js?v=smtcUT5dhdu_5eEO8CKHYoVc7DPLgEBGzp6zKkstlzg1" type="text/javascript"></script>
</head>
<body>
<a name="top"></a>


<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
	<a id="lnkBlogLogo" href="http://www.cnblogs.com/uoyo/"><img id="blogLogo" src="/Skins/custom/images/logo.gif" alt="返回主页" /></a>			
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle" href="https://www.cnblogs.com/uoyo/">句幽</a></h1>
<h2></h2>



		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">博客园</a></li>
<li><a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/uoyo/">首页</a></li>
<li><a id="blog_nav_newpost" class="menu" rel="nofollow" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">新随笔</a></li>
<li><a id="blog_nav_contact" class="menu" rel="nofollow" href="https://msg.cnblogs.com/send/%E5%8F%A5%E5%B9%BD">联系</a></li>
<li><a id="blog_nav_rss" class="menu" href="https://www.cnblogs.com/uoyo/rss">订阅</a>
<!--<a id="blog_nav_rss_image" class="aHeaderXML" href="https://www.cnblogs.com/uoyo/rss"><img src="//www.cnblogs.com/images/xml.gif" alt="订阅" /></a>--></li>
<li><a id="blog_nav_admin" class="menu" rel="nofollow" href="https://i.cnblogs.com/">管理</a></li>
</ul>
		<div class="blogStats">
			
			<div id="blog_stats">
<span id="stats_post_count">随笔 - 27&nbsp; </span>
<span id="stats_article_count">文章 - 1&nbsp; </span>
<span id="stats-comment_count">评论 - 406</span>
</div>
			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		
        
<!--done-->
<div id="homepage_top_pager" class="topicListFooter"><div class="pager">
	共3页:&nbsp;<a href="https://www.cnblogs.com/uoyo/default.html?page=1">上一页</a>&nbsp;<a href="https://www.cnblogs.com/uoyo/default.html?page=1">1</a>&nbsp;2&nbsp;<a href="https://www.cnblogs.com/uoyo/default.html?page=3">3</a>&nbsp;<a href="https://www.cnblogs.com/uoyo/default.html?page=3">下一页</a>&nbsp;
</div></div>

<div class="day">
	<div class="dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl00_ImageLink" href="http://www.cnblogs.com/uoyo/archive/2020/02/17.html">2020年2月17日</a>				  
	</div>

	
			<div class="postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl00_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/uoyo/p/12322640.html">【5min+】 巨大的争议？C# 8 中的接口</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 伴随着 .NET Core 3.0 一起发布的 C# 8 ，从发布至今已经过了快大半年了。如果您细心的话，就能发现在C# 8新增的功能中有一条：“默认接口方法” 。 半年前当我看到这一新特性的时候，我惊呆了，但是惊讶之余是更多的疑惑。因为对于接口这个东西来说，从C#发布至今的十多年里几乎一直保持它的样子，然而在C# 8之后，它有了巨大的变化。随着而来，也是各种争论的声音。<a href="https://www.cnblogs.com/uoyo/p/12322640.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2020-02-17 17:22 句幽 阅读(4110) 评论(48)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=12322640" rel="nofollow">编辑</a></div>
			<div class="clear"></div>
		
</div>


<div class="day">
	<div class="dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl01_ImageLink" href="http://www.cnblogs.com/uoyo/archive/2020/02/14.html">2020年2月14日</a>				  
	</div>

	
			<div class="postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl01_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/uoyo/p/12307959.html">【5min+】 这些C#的运算符您都认识吗？</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 对于“ + ”,“ - ”，“ * ”，“ / ”，“ is ”，“ as ” 等C#的运算符可能大家都再熟悉不过了。但是有时候大家在阅读一些网站上的代码或者开源项目的源码时，会遇到一些奇奇怪怪的运算符，特别当几个少见的运算符连在一起的时候，仿佛有一种 “别人的C#和我的C#怎么不一样” 的感觉。随着C#的版本更新，它为我们提供了许许多多的语法糖和新运算符方便我们更流畅的来编写代码。当有时候遇到不认识的运算符，就会本着 “百度不行就谷歌” 的程序员大法来疯狂操作一波。但是！！ 搜索引擎他喵的居然不认这些符号。<a href="https://www.cnblogs.com/uoyo/p/12307959.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2020-02-14 16:45 句幽 阅读(700) 评论(11)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=12307959" rel="nofollow">编辑</a></div>
			<div class="clear"></div>
		
</div>


<div class="day">
	<div class="dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl02_ImageLink" href="http://www.cnblogs.com/uoyo/archive/2020/01/24.html">2020年1月24日</a>				  
	</div>

	
			<div class="postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl02_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/uoyo/p/12232261.html">【5min+】帮我排个队，谢谢。await Task.Yield()</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 【五分钟的dotnet】是一个利用您的碎片化时间来学习和丰富.net知识的博文系列。如果您现在正在使用.NetCore的话，相信您对await 和 async这两个关键字再熟悉不过了。它们是为异步编程提供的语法糖，便于我们在代码中更便捷的进行异步操作。await 和 async其实是对Task对象都一层包装操作。而当我们查看Task对象的时候，会发现他有一个叫做 Yield() 的方法。<a href="https://www.cnblogs.com/uoyo/p/12232261.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2020-01-24 15:41 句幽 阅读(1475) 评论(6)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=12232261" rel="nofollow">编辑</a></div>
			<div class="clear"></div>
		
</div>


<div class="day">
	<div class="dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl03_ImageLink" href="http://www.cnblogs.com/uoyo/archive/2020/01/20.html">2020年1月20日</a>				  
	</div>

	
			<div class="postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl03_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/uoyo/p/12218998.html">【5min+】传说中的孪生兄弟？ Memory and Span</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 在上一篇文章：《闪电光速拳？ .NetCore 中的Span》中我们提到了在.net core 2.x 所新增的一个类型：Span。但是您会发现它无法用在我们项目的某些地方，它独特的 ref结构 使它没有办法跨线程使用、更没有办法使用Lambda表达式。所以，这个时候如果我们又想跨线程操作数据又想获得类似Span这样的性能怎么办呢？<a href="https://www.cnblogs.com/uoyo/p/12218998.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2020-01-20 18:13 句幽 阅读(1817) 评论(17)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=12218998" rel="nofollow">编辑</a></div>
			<div class="clear"></div>
		
</div>


<div class="day">
	<div class="dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl04_ImageLink" href="http://www.cnblogs.com/uoyo/archive/2020/01/17.html">2020年1月17日</a>				  
	</div>

	
			<div class="postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl04_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/uoyo/p/12207148.html">【5min+】闪电光速拳？ .NetCore 中的Span</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 在dotnet core2.x之后，引入了一个叫做Span<a href="https://www.cnblogs.com/uoyo/p/12207148.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2020-01-17 18:43 句幽 阅读(2967) 评论(23)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=12207148" rel="nofollow">编辑</a></div>
			<div class="clear"></div>
		
</div>


<div class="day">
	<div class="dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl05_ImageLink" href="http://www.cnblogs.com/uoyo/archive/2020/01/13.html">2020年1月13日</a>				  
	</div>

	
			<div class="postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl05_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/uoyo/p/12188739.html">【5min+】 秋名山的竞速。 ValueTask 和 Task</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 伴随着dotnet core的不断迭代，我们在享受.net性能上的提升之外，还收获了许许多多新出现的API。不知您有没有发现，有这样一个类型在开始逐渐出现在我们的视野中 ———— ValueTask<a href="https://www.cnblogs.com/uoyo/p/12188739.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2020-01-13 18:28 句幽 阅读(1064) 评论(8)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=12188739" rel="nofollow">编辑</a></div>
			<div class="clear"></div>
		
</div>


<div class="day">
	<div class="dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl06_ImageLink" href="http://www.cnblogs.com/uoyo/archive/2020/01/10.html">2020年1月10日</a>				  
	</div>

	
			<div class="postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl06_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/uoyo/p/12177511.html">【5min+】你怎么穿着品如的衣服？IEnumerable AND IEnumerator</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: IEnumerable**和**IEnumerator**，如果不仔细看，是不是都以为它们是同样的一个单词。特别是我们习惯了每天看大量的中文，这种只是很小区别的单词更是容易犯错。在.NET的世界里好像有这种类似单词的情况还真的不少，比如**Authentication**和**Authorization**（认证和授权）。记得第一次见着它俩的时候，我说怎么看了半天怎么第一部分是它，第二个部分还是它？甚至我一度以为它们是同一个东西。(*关于认证和授权将在后期为大家介绍。*)<a href="https://www.cnblogs.com/uoyo/p/12177511.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2020-01-10 18:05 句幽 阅读(650) 评论(4)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=12177511" rel="nofollow">编辑</a></div>
			<div class="clear"></div>
		
</div>


<div class="day">
	<div class="dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl07_ImageLink" href="http://www.cnblogs.com/uoyo/archive/2020/01/08.html">2020年1月8日</a>				  
	</div>

	
			<div class="postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl07_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/uoyo/p/12167360.html">【DDD】持久化领域对象的方法实践</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 虽然领域驱动设计的思想很诱人，但我们依然会面临各种隐藏的困难，就比如今天我们要讲的主题“持久化”：即使前期我们设计了足够完整的领域对象，但是依然需要持久化它们到数据库中，而普通的关系型数据库可能很难维持领域对象的原有结构，所以我们必须要使用一些特有的手段来处理它。将值对象持久化成字段好呢？还是将值对象持久化为表好呢？集合的值对象又怎么存呢？<a href="https://www.cnblogs.com/uoyo/p/12167360.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2020-01-08 16:29 句幽 阅读(3170) 评论(29)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=12167360" rel="nofollow">编辑</a></div>
			<div class="clear"></div>
		
			<div class="postSeparator"></div>
		
			<div class="postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl07_DayList_TitleUrl_1" class="postTitle2" href="https://www.cnblogs.com/uoyo/p/12167224.html">《如何运用领域驱动设计》汇总</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 这是关于领域驱动设计的一个系列博文，目的是在学习之后能够使用领域驱动设计的知识来开发应用。领域驱动设计是目前比较火的概念，其实早在2004年的时候 **Eric Evans** 就提出了领域驱动设计。但是直到后期才被大家所认识，特别是随着现在微服务的兴起，许许多多的人意识到了领域驱动设计的好处，认为它是指导微服务设计的一把利器。<a href="https://www.cnblogs.com/uoyo/p/12167224.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2020-01-08 16:13 句幽 阅读(1292) 评论(11)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=12167224" rel="nofollow">编辑</a></div>
			<div class="clear"></div>
		
</div>


<div class="day">
	<div class="dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl08_ImageLink" href="http://www.cnblogs.com/uoyo/archive/2020/01/06.html">2020年1月6日</a>				  
	</div>

	
			<div class="postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl08_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/uoyo/p/12157709.html">【5min+】 什么？原来C#还有这两个关键字</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 【五分钟的dotnet】是一个利用您的碎片化时间来学习和丰富.net知识的博文系列。它所包含了.net体系中可能会涉及到的方方面面，比如C#的小细节，AspnetCore，微服务中的.net知识等等。您可以在下班坐地铁的时候，拿出手机逛一逛博客园，利用短短的五分钟完成阅读。<a href="https://www.cnblogs.com/uoyo/p/12157709.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2020-01-06 18:05 句幽 阅读(1309) 评论(8)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=12157709" rel="nofollow">编辑</a></div>
			<div class="clear"></div>
		
</div>

<div class="topicListFooter"></div><div id="homepage1_HomePageDays_homepage_bottom_pager" class="topicListFooter"><div class="pager">
	共3页:&nbsp;<a href="https://www.cnblogs.com/uoyo/default.html?page=1">上一页</a>&nbsp;<a href="https://www.cnblogs.com/uoyo/default.html?page=1">1</a>&nbsp;2&nbsp;<a href="https://www.cnblogs.com/uoyo/default.html?page=3">3</a>&nbsp;<a href="https://www.cnblogs.com/uoyo/default.html?page=3">下一页</a>&nbsp;
</div></div>

    
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<!--done-->
<div class="newsItem">
<h3 class="catListTitle">公告</h3>
	<div id="blog-news"></div><script type="text/javascript">loadBlogNews();</script>
</div>

			<div id="blog-calendar" style="display:none"></div><script type="text/javascript">loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div><script type="text/javascript">loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		
<!--done-->
Copyright &copy;2020 句幽
	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->

<!--PageEndHtml Block Begin-->
<div class="Snow">
    <canvas id="Snow"></canvas>
</div>

<!--下雪特效-->
<script src="https://blog-static.cnblogs.com/files/uoyo/snoweffects.js"></script>

<script type="text/javascript" language="javascript"> 
//为右下角推荐推荐区域添加关注按钮
window.onload = function () {
    $('#div_digg').prepend('<div style="padding-bottom: 5px" id="please_follow"><span class="icon_favorite" style="padding-top: 2px"></span><a onclick="follow(\'4660842a-34b1-4866-476c-08d52fc34315\');" href="javascript:void(0);" style="font-weight: bold; padding-left:5px;font-size: 14px; vertical-align: super;color: #ff5d47;">关注一下楼主吧</a> </div>');
}
</script>

<!--代码复制-->
<script src="https://cdn.bootcss.com/clipboard.js/2.0.4/clipboard.min.js"></script>

<!--主题-->
<script src="https://blog-static.cnblogs.com/files/uoyo/gshang.2019.10.27.1.js"></script>

<!-- zoom.js 的样式 -->
<link rel="stylesheet" type="text/css" href="https://blog-static.cnblogs.com/files/uoyo/zoom.css">
<!-- Bootstrap 的 transition.js cdn（过渡动画插件）-->
<script src="https://cdn.bootcss.com/bootstrap/3.2.0/js/transition.js"></script>
<!-- zoom.js 核心代码 -->
<script src="https://blog-static.cnblogs.com/files/uoyo/zoom.js"></script>
<script type='text/javascript'>$('#cnblogs_post_body img').attr('data-action', 'zoom');</script>
<!--PageEndHtml Block End-->
</body>
</html>
