<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin-when-crossorigin" />
    <meta name="description" content="支付宽表的目的，最主要的原因是支付表没有到订单明细，支付金额没有细分到商品上， 没有办法统计商品级的支付状况。 所以本次宽表的核心就是要把支付表的信息与订单明细关联上。" />
    <meta property="og:description" content="支付宽表的目的，最主要的原因是支付表没有到订单明细，支付金额没有细分到商品上， 没有办法统计商品级的支付状况。 所以本次宽表的核心就是要把支付表的信息与订单明细关联上。" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>11.Flink实时项目之支付宽表 - 选手一号位 - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=LdAfPG3EWG4o7Q_XIVJY6Bcod1YpBGSGJykht0T_GZw" />
    <link id="MainCss" rel="stylesheet" href="/skins/simplememory/bundle-simplememory.min.css?v=uknaX_hejnSu-njQgx4Hj1R0JiPLwUhFPUlwWNmWyB4" />
    <link id="highlighter-theme-solarized-dark" type="text/css" rel="stylesheet" href="/css/hljs/solarized-dark.css?v=a_FbWTTYO88cbAZEyRMbf8rnLUt3LIjHiAWUIBygNOs" />
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/SimpleMemory/bundle-SimpleMemory-mobile.min.css" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/zhangbaohpu/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/zhangbaohpu/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/zhangbaohpu/wlwmanifest.xml" />
    <script>
        var currentBlogId = 731926;
        var currentBlogApp = 'zhangbaohpu';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'SimpleMemory';
        var visitorUserId = '';
        var hasCustomScript = false;
        try {
            if (hasCustomScript && document.referrer && document.referrer.indexOf('baidu.com') >= 0) {
                Object.defineProperty(document, 'referrer', { value: '' });
                Object.defineProperty(Document.prototype, 'referrer', { get: function(){ return ''; } });
            }
        } catch(error) { }
        window.codeHighlightEngine = 1;
        window.enableCodeLineNumber = false;
        window.codeHighlightTheme = 'solarized-dark';
    </script>
        <script>
            var currentPostDateAdded = '2022-04-17 11:49';
        </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=KyayiYRvpSgg7du5WKccH8LB1LMuZAKgC9DVqUljgvA"></script>
    
    
    
</head>
<body class="skin-simplememory has-navbar">
    <a name="top"></a>
        <div id="bannerbar" class="bannerbar-mobile formobile">
            <a href="https://www.heapdump.cn/training/detail/4?source=bky" onclick="countCreativeClicks('M2-HeapDump')" rel="nofollow">
                <img src="https://img2022.cnblogs.com/blog/35695/202204/35695-20220407182236380-944894887.jpg" alt="" onload="countCreativeImpressions('M2-HeapDump')" />
            </a>
        </div>
    <div id="top_nav" class="navbar forpc">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding">
                    <a href="https://www.cnblogs.com/" title="开发者的网上家园" role="banner">
                        <img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" />
                    </a>
                </li>
                <li><a href="/" onclick="countClicks('skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="countClicks('nav', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="countClicks('nav', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/huawei" onclick="countClicks('nav', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="countClicks('nav', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="countClicks('nav', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get" role="search">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="search" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="/images/aggsite/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=J0WS2P2iPgaIVgXxcAhliw4AFZIpaTWxtdoNAv9eiCA" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <a id="navbar_lite_mode_indicator" data-current-page="blog" style="display: none" href="javascript:void(0)" alt="简洁模式" title="简洁模式启用，您在访问他人博客时会使用简洁款皮肤展示">
                        <img class="navbar-icon" src="/images/aggsite/lite-mode-on.svg" alt="简洁模式" />
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    
    <!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/zhangbaohpu/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/zhangbaohpu/">选手一号位</a>
</h1>
<h2></h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/zhangbaohpu/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E9%80%89%E6%89%8B%E4%B8%80%E5%8F%B7%E4%BD%8D">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/zhangbaohpu/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			<div id="blog_stats_place_holder"><script>loadBlogStats();</script></div>
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/zhangbaohpu/p/16155340.html">
    <span role="heading" aria-level="2">11.Flink实时项目之支付宽表</span>
    
</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        <img src="https://img2022.cnblogs.com/blog/1047345/202204/1047345-20220417114843225-633287420.png" alt="11.Flink实时项目之支付宽表" class="desc_img" />
        支付宽表的目的，最主要的原因是支付表没有到订单明细，支付金额没有细分到商品上， 没有办法统计商品级的支付状况。 所以本次宽表的核心就是要把支付表的信息与订单明细关联上。
    </div>
<div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h1 class="md-end-block md-heading"><span class="md-plain md-expand">支付宽表</span></h1>
<p class="md-end-block md-p"><span class="md-plain">支付宽表的目的，最主要的原因是支付表没有到订单明细，支付金额没有细分到商品上， 没有办法统计商品级的支付状况。 所以本次宽表的核心就是要把支付表的信息与订单明细关联上。</span></p>
<p class="md-end-block md-p"><span class="md-pair-s"><strong><span class="md-plain">解决方案有两个</span></strong></span></p>
<p class="md-end-block md-p"><span class="md-plain">一个是把订单明细表（或者宽表）输出到 Hbase 上，在支付宽表计算时查询 hbase， 这相当于把订单明细作为一种维度进行管理。 </span></p>
<p class="md-end-block md-p"><span class="md-plain">一个是用流的方式接收订单明细，然后用双流 join 方式进行合并。因为订单与支付产 生有一定的时差。所以必须用 intervalJoin 来管理流的状态时间，保证当支付到达时订 单明细还保存在状态中。</span></p>
<h1 class="md-end-block md-heading"><span class="md-plain">支付相关实体类</span></h1>
<p class="md-end-block md-p md-focus"><span class="md-plain md-expand">PaymentInfo.java：支付实体类</span></p>
<pre class="md-fences md-end-block ty-contain-cm modeLoaded" lang="java" spellcheck="false"><code>import lombok.Data;
import java.math.BigDecimal;
/**
 * @author zhangbaohpu
 * @date 2021/12/25 10:08
 * @desc 支付实体类
 */
@Data
public class PaymentInfo {
 &nbsp; &nbsp;Long id;
 &nbsp; &nbsp;Long order_id;
 &nbsp; &nbsp;Long user_id;
 &nbsp; &nbsp;BigDecimal total_amount;
 &nbsp; &nbsp;String subject;
 &nbsp; &nbsp;String payment_type;
 &nbsp; &nbsp;String create_time;
 &nbsp; &nbsp;String callback_time;
}</code></pre>
<p class="md-end-block md-p"><span class="md-plain">PaymentWide.java：支付宽表实体类</span></p>
<pre class="md-fences md-end-block ty-contain-cm modeLoaded" lang="java" spellcheck="false"><code>import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.apache.commons.beanutils.BeanUtils;
import java.lang.reflect.InvocationTargetException;
import java.math.BigDecimal;
/**
 * @author zhangbaohpu
 * @date 2021/12/25 10:10
 * @desc 支付宽表实体类
 */
@Data
@AllArgsConstructor
@NoArgsConstructor
public class PaymentWide {
 &nbsp; &nbsp;Long payment_id;
 &nbsp; &nbsp;String subject;
 &nbsp; &nbsp;String payment_type;
 &nbsp; &nbsp;String payment_create_time;
 &nbsp; &nbsp;String callback_time;
 &nbsp; &nbsp;Long detail_id;
 &nbsp; &nbsp;Long order_id ;
 &nbsp; &nbsp;Long sku_id;
 &nbsp; &nbsp;BigDecimal order_price ;
 &nbsp; &nbsp;Long sku_num ;
 &nbsp; &nbsp;String sku_name;
 &nbsp; &nbsp;Long province_id;
 &nbsp; &nbsp;String order_status;
 &nbsp; &nbsp;Long user_id;
 &nbsp; &nbsp;BigDecimal total_amount;
 &nbsp; &nbsp;BigDecimal activity_reduce_amount;
 &nbsp; &nbsp;BigDecimal coupon_reduce_amount;
 &nbsp; &nbsp;BigDecimal original_total_amount;
 &nbsp; &nbsp;BigDecimal feight_fee;
 &nbsp; &nbsp;BigDecimal split_feight_fee;
 &nbsp; &nbsp;BigDecimal split_activity_amount;
 &nbsp; &nbsp;BigDecimal split_coupon_amount;
 &nbsp; &nbsp;BigDecimal split_total_amount;
 &nbsp; &nbsp;String order_create_time;
 &nbsp; &nbsp;String province_name;//查询维表得到
 &nbsp; &nbsp;String province_area_code;
 &nbsp; &nbsp;String province_iso_code;
 &nbsp; &nbsp;String province_3166_2_code;
 &nbsp; &nbsp;Integer user_age ;
 &nbsp; &nbsp;String user_gender;
 &nbsp; &nbsp;Long spu_id; //作为维度数据 要关联进来
 &nbsp; &nbsp;Long tm_id;
 &nbsp; &nbsp;Long category3_id;
 &nbsp; &nbsp;String spu_name;
 &nbsp; &nbsp;String tm_name;
 &nbsp; &nbsp;String category3_name;
 &nbsp; &nbsp;public PaymentWide(PaymentInfo paymentInfo, OrderWide orderWide){
 &nbsp; &nbsp; &nbsp; &nbsp;mergeOrderWide(orderWide);
 &nbsp; &nbsp; &nbsp; &nbsp;mergePaymentInfo(paymentInfo);
 &nbsp;  }
 &nbsp; &nbsp;public void mergePaymentInfo(PaymentInfo paymentInfo ) {
 &nbsp; &nbsp; &nbsp; &nbsp;if (paymentInfo != null) {
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;try {
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;BeanUtils.copyProperties(this,paymentInfo);
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;payment_create_time=paymentInfo.create_time;
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;payment_id = paymentInfo.id;
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  } catch (IllegalAccessException e) {
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStackTrace();
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  } catch (InvocationTargetException e) {
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStackTrace();
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }
 &nbsp; &nbsp; &nbsp;  }
 &nbsp;  }
 &nbsp; &nbsp;public void mergeOrderWide(OrderWide orderWide ) {
 &nbsp; &nbsp; &nbsp; &nbsp;if (orderWide != null) {
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;try {
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;BeanUtils.copyProperties(this,orderWide);
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;order_create_time=orderWide.create_time;
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  } catch (IllegalAccessException e) {
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStackTrace();
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  } catch (InvocationTargetException e) {
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStackTrace();
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }
 &nbsp; &nbsp; &nbsp;  }
 &nbsp;  }
}</code></pre>
<h1 class="md-end-block md-heading"><span class="md-plain">支付宽表主程序</span></h1>
<p class="md-end-block md-p"><span class="md-plain">目前还没有任何计算，仍然放在dwm层</span></p>
<p class="md-end-block md-p"><span class="md-plain">在dwm包下创建PaymentWideApp.java任务类</span></p>
<pre class="md-fences md-end-block ty-contain-cm modeLoaded" lang="java" spellcheck="false"><code>import cn.hutool.core.date.DatePattern;
import cn.hutool.core.date.DateUnit;
import cn.hutool.core.date.DateUtil;
import com.alibaba.fastjson.JSON;
import com.zhangbao.gmall.realtime.bean.OrderWide;
import com.zhangbao.gmall.realtime.bean.PaymentInfo;
import com.zhangbao.gmall.realtime.bean.PaymentWide;
import com.zhangbao.gmall.realtime.utils.MyKafkaUtil;
import org.apache.flink.api.common.eventtime.SerializableTimestampAssigner;
import org.apache.flink.api.common.eventtime.WatermarkStrategy;
import org.apache.flink.runtime.state.filesystem.FsStateBackend;
import org.apache.flink.streaming.api.CheckpointingMode;
import org.apache.flink.streaming.api.datastream.DataStreamSource;
import org.apache.flink.streaming.api.datastream.KeyedStream;
import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator;
import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;
import org.apache.flink.streaming.api.functions.co.ProcessJoinFunction;
import org.apache.flink.streaming.api.windowing.time.Time;
import org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumer;
import org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer;
import org.apache.flink.util.Collector;
​
import java.time.Duration;
​
/**
 * @author zhangbaohpu
 * @date 2021/12/25 10:16
 * @desc 支付宽表
 */
public class PaymentWideApp {
 &nbsp; &nbsp;public static void main(String[] args) {
 &nbsp; &nbsp; &nbsp; &nbsp;StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();
 &nbsp; &nbsp; &nbsp; &nbsp;//添加并行度
 &nbsp; &nbsp; &nbsp; &nbsp;env.setParallelism(4);
​
 &nbsp; &nbsp; &nbsp; &nbsp;//设置检查点
// &nbsp; &nbsp; &nbsp;  env.enableCheckpointing(5000, CheckpointingMode.EXACTLY_ONCE);
// &nbsp; &nbsp; &nbsp;  env.getCheckpointConfig().setCheckpointTimeout(60000);
// &nbsp; &nbsp; &nbsp;  env.setStateBackend(new FsStateBackend("hdfs://hadoop101:9000/gmall/flink/checkpoint/paymentWide"));
// &nbsp; &nbsp; &nbsp;  //指定哪个用户读取hdfs文件
// &nbsp; &nbsp; &nbsp;  System.setProperty("HADOOP_USER_NAME","zhangbao");
​
 &nbsp; &nbsp; &nbsp; &nbsp;//设置kafka主题及消费者组
 &nbsp; &nbsp; &nbsp; &nbsp;String paymentInfoTopic = "dwd_payment_info";
 &nbsp; &nbsp; &nbsp; &nbsp;String orderWideTopic = "dwm_order_wide";
 &nbsp; &nbsp; &nbsp; &nbsp;String paymentWideTopic = "dwm_payment_wide";
 &nbsp; &nbsp; &nbsp; &nbsp;String paymentWideGroup = "paymentWideGroup";
​
 &nbsp; &nbsp; &nbsp; &nbsp;//获取支付信息
 &nbsp; &nbsp; &nbsp; &nbsp;FlinkKafkaConsumer&lt;String&gt; paymentInfo = MyKafkaUtil.getKafkaSource(paymentInfoTopic, paymentWideGroup);
 &nbsp; &nbsp; &nbsp; &nbsp;DataStreamSource&lt;String&gt; paymentInfoJsonStrDs = env.addSource(paymentInfo);
 &nbsp; &nbsp; &nbsp; &nbsp;//获取订单宽表信息
 &nbsp; &nbsp; &nbsp; &nbsp;FlinkKafkaConsumer&lt;String&gt; orderWide = MyKafkaUtil.getKafkaSource(orderWideTopic, paymentWideGroup);
 &nbsp; &nbsp; &nbsp; &nbsp;DataStreamSource&lt;String&gt; orderWideJsonStrDs = env.addSource(orderWide);
​
 &nbsp; &nbsp; &nbsp; &nbsp;//转换格式
 &nbsp; &nbsp; &nbsp; &nbsp;SingleOutputStreamOperator&lt;PaymentInfo&gt; paymentJsonDs = paymentInfoJsonStrDs.map(paymentInfoStr -&gt; JSON.parseObject(paymentInfoStr, PaymentInfo.class));
 &nbsp; &nbsp; &nbsp; &nbsp;SingleOutputStreamOperator&lt;OrderWide&gt; orderWideJsonDs = orderWideJsonStrDs.map(orderWideStr -&gt; JSON.parseObject(orderWideStr, OrderWide.class));
​
 &nbsp; &nbsp; &nbsp; &nbsp;paymentJsonDs.print("payment info &gt;&gt;&gt;");
 &nbsp; &nbsp; &nbsp; &nbsp;orderWideJsonDs.print("order wide &gt;&gt;&gt;");
​
 &nbsp; &nbsp; &nbsp; &nbsp;//指定事件时间字段
 &nbsp; &nbsp; &nbsp; &nbsp;SingleOutputStreamOperator&lt;PaymentInfo&gt; paymentInfoWithWaterMarkDs = paymentJsonDs.assignTimestampsAndWatermarks(
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;WatermarkStrategy.&lt;PaymentInfo&gt;forBoundedOutOfOrderness(Duration.ofSeconds(3))
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  .withTimestampAssigner(new SerializableTimestampAssigner&lt;PaymentInfo&gt;() {
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;@Override
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;public long extractTimestamp(PaymentInfo paymentInfo, long l) {
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return DateUtil.parse(paymentInfo.getCallback_time(), DatePattern.NORM_DATETIME_PATTERN).getTime();
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  })
 &nbsp; &nbsp; &nbsp;  );
 &nbsp; &nbsp; &nbsp; &nbsp;SingleOutputStreamOperator&lt;OrderWide&gt; orderWideWithWaterMarkDs = orderWideJsonDs.assignTimestampsAndWatermarks(
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;WatermarkStrategy.&lt;OrderWide&gt;forBoundedOutOfOrderness(Duration.ofSeconds(3))
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  .withTimestampAssigner(new SerializableTimestampAssigner&lt;OrderWide&gt;() {
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;@Override
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;public long extractTimestamp(OrderWide orderWide, long l) {
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return DateUtil.parse(orderWide.getCreate_time(), DatePattern.NORM_DATETIME_PATTERN).getTime();
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  })
 &nbsp; &nbsp; &nbsp;  );
​
 &nbsp; &nbsp; &nbsp; &nbsp;//分组
 &nbsp; &nbsp; &nbsp; &nbsp;KeyedStream&lt;PaymentInfo, Long&gt; paymentInfoKeyedDs = paymentInfoWithWaterMarkDs.keyBy(payInfoObj -&gt; payInfoObj.getOrder_id());
 &nbsp; &nbsp; &nbsp; &nbsp;KeyedStream&lt;OrderWide, Long&gt; orderWideKeyedDs = orderWideWithWaterMarkDs.keyBy(orderWideObj -&gt; orderWideObj.getOrder_id());
​
 &nbsp; &nbsp; &nbsp; &nbsp;paymentInfoKeyedDs.print("paymentInfoKeyedDs &gt;&gt;&gt;");
 &nbsp; &nbsp; &nbsp; &nbsp;orderWideKeyedDs.print("orderWideKeyedDs &gt;&gt;&gt;");
​
 &nbsp; &nbsp; &nbsp; &nbsp;//双流join，用支付数据关联订单数据
 &nbsp; &nbsp; &nbsp; &nbsp;SingleOutputStreamOperator&lt;PaymentWide&gt; paymentWideObjDs = paymentInfoKeyedDs.intervalJoin(orderWideKeyedDs)
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  .between(Time.seconds(-1800), Time.seconds(1800))
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  .process(new ProcessJoinFunction&lt;PaymentInfo, OrderWide, PaymentWide&gt;() {
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;@Override
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;public void processElement(PaymentInfo paymentInfo, OrderWide orderWide, ProcessJoinFunction&lt;PaymentInfo, OrderWide, PaymentWide&gt;.Context context, Collector&lt;PaymentWide&gt; collector) throws Exception {
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.out.println(paymentInfo);
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.out.println(orderWide);
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;collector.collect(new PaymentWide(paymentInfo, orderWide));
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  });
 &nbsp; &nbsp; &nbsp; &nbsp;//将数据流转换为json
 &nbsp; &nbsp; &nbsp; &nbsp;SingleOutputStreamOperator&lt;String&gt; paymentWideDs = paymentWideObjDs.map(paymentWide -&gt; JSON.toJSONString(paymentWide));
 &nbsp; &nbsp; &nbsp; &nbsp;paymentWideDs.print("payment wide json &gt;&gt;&gt; ");
 &nbsp; &nbsp; &nbsp; &nbsp;//发送到kafka
 &nbsp; &nbsp; &nbsp; &nbsp;FlinkKafkaProducer&lt;String&gt; kafkaSink = MyKafkaUtil.getKafkaSink(paymentWideTopic);
 &nbsp; &nbsp; &nbsp; &nbsp;paymentWideDs.addSink(kafkaSink);
​
 &nbsp; &nbsp; &nbsp; &nbsp;try {
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;env.execute("payment wide task");
 &nbsp; &nbsp; &nbsp;  } catch (Exception e) {
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStackTrace();
 &nbsp; &nbsp; &nbsp;  }
 &nbsp;  }
}</code></pre>
<p class="md-end-block md-p"><span class="md-plain">到这里，支付宽表的操作就完成了。</span></p>
<p class="md-end-block md-p"><span class="md-plain">项目地址：</span><span class="md-link md-pair-s" spellcheck="false"><a href="https://github.com/zhangbaohpu/gmall-flink-parent/tree/master/gmall-realtime" rel="noopener">https://github.com/zhangbaohpu/gmall-flink-parent/tree/master/gmall-realtime</a></span></p>
<h1 class="md-end-block md-heading"><span class="md-plain">总结</span></h1>
<p class="md-end-block md-p"><span class="md-plain">DWM 层部分的代码主要的责任，是通过计算把一种明细转变为另一种明细以应对后续的统计。学完本阶段内容要求掌握</span></p>
<ul class="ul-list" data-mark="-">
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-plain">学会利用状态（state）进行去重操作。（需求：UV 计算）</span></p>
</li>
</ul>
<ul class="ul-list" data-mark="-">
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-plain">学会利用 CEP 可以针对一组数据进行筛选判断。需求：跳出行为计算</span></p>
</li>
</ul>
<ul class="ul-list" data-mark="-">
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-plain">学会使用 intervalJoin 处理流 join</span></p>
</li>
</ul>
<ul class="ul-list" data-mark="-">
<li class="md-list-item">
<p class="md-end-block md-p"><span class="md-plain">学会处理维度关联，并通过缓存和异步查询对其进行性能优化。</span></p>
</li>
</ul>
<blockquote>
<p class="md-end-block md-p"><span class="md-plain md-expand">更多请在某公号平台搜索：选手一号位，本文编号：1011，回复即可获取。</span></p>
</blockquote>
</div>
<div class="clear"></div>
<div id="blog_post_info_block" role="contentinfo">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2022-04-17 11:49</span>&nbsp;
<a href="https://www.cnblogs.com/zhangbaohpu/">选手一号位</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=16155340" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(16155340);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '16155340', targetLink: 'https://www.cnblogs.com/zhangbaohpu/p/16155340.html', title: '11.Flink实时项目之支付宽表' })">举报</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>

<script>
    var cb_entryId = 16155340, cb_entryCreatedDate = '2022-04-17 11:49', cb_postType = 1, cb_postTitle = '11.Flink实时项目之支付宽表';
    var allowComments = true, cb_blogId = 731926, cb_blogApp = 'zhangbaohpu', cb_blogUserGuid = 'c90d0ed7-7597-e611-845c-ac853d9f53ac';
    mermaidRender.render()
    markdown_highlight()
    zoomManager.apply("#cnblogs_post_body img:not(.code_img_closed):not(.code_img_opened)");
    updatePostStats(
            [cb_entryId],
            function(id, count) { $("#post_view_count").text(count) },
            function(id, count) { $("#post_comment_count").text(count) })
</script>
<a id="!comments"></a>
<div id="blog-comments-placeholder"></div>
<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="cnblogs_ch"></div>
    <div id="opt_under_post"></div>
    <div id="cnblogs_c1" class="under-post-card">
            <div id='div-gpt-ad-1592365906576-0' style='width: 300px; height: 250px;'></div>
    </div>
    <div id="under_post_card1"></div>
        <div id="cnblogs_c2" class="under-post-card">
            <a href="https://developer.huawei.com/consumer/cn/forum/topic/0202851788421280176?fid=23&amp;ha_source=bokeyuan&amp;ha_source=HeZuo30&amp;ha_sourceId=89000081" rel="nofollow" target="_blank" onclick="countCreativeClicks('C2-华为-codelabs')">
                <img src="https://img2022.cnblogs.com/blog/35695/202204/35695-20220413123003334-931328747.jpg" alt="" onload="countCreativeImpressions('C2-华为-codelabs')" />
            </a>
        </div>
    <div id="under_post_card2"></div>
    <div id="HistoryToday" class="under-post-card"></div>
    <script type="text/javascript">
        var commentManager = new blogCommentManager();
        commentManager.renderComments(0);
        fixPostBody();

                        window.tocManager.displayDisableTocTips = false;
                        window.tocManager.generateToc();
            setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverT2();
        deliverC1C2();
        loadNewsAndKb();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>

	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->
	<div id="sideBar">
		<div id="sideBarMain">
			<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>
<div id="sidebar_c3"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2022 选手一号位
<br /><span id="poweredby">Powered by .NET 6 on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    

    <input type="hidden" id="antiforgery_token" value="CfDJ8AuMt_3FvyxIgNOR82PHE4nxcF7_sAEd8S3WHDb5aZpVYrqNl1k5z27nMeT4Y0DDEMT4H20N8rafhjI3NC7n16YTg2hCvdvnvPAz4DNbxlee0_SS7KLoPmCjT1kPIl9DL3H3_SJqrEaacEv3udjiH_o" />
        <script async src="https://www.googletagmanager.com/gtag/js?id=UA-476124-1"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        var kv = getGACustom();
        if (kv) {
            gtag('set', kv);
        }
        gtag('config', 'UA-476124-1');
    </script>
<script defer src="https://hm.baidu.com/hm.js?866c9be12d4a814454792b1fd0fed295"></script>
</body>
</html>