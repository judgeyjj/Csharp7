<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="referrer" content="origin" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <title>编程新说(李新杰) - 博客园</title>
    <link type="text/css" rel="stylesheet" href="/bundles/blog-common.css?v=KOZafwuaDasEedEenI5aTy8aXH0epbm6VUJ0v3vsT_Q1"/>
<link id="MainCss" type="text/css" rel="stylesheet" href="/skins/sea/bundle-sea.css?v=PPe3jt1rcXPno6kucw0iQU2MWF3DbrvubQHRM0FEMas1"/>
<link type="text/css" rel="stylesheet" href="/blog/customcss/58412.css?v=oR5umUs9b7TcHKOjsQ%2fSquV28TE%3d"/>
<link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/sea/bundle-sea-mobile.css?v=yFtgEd5VFXGr9Lo4adjD_iDDW9y0pVJjEZ2io36-rWw1"/>
    <link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/lixinjie/rss"/>
    <link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/lixinjie/rsd.xml"/>
<link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/lixinjie/wlwmanifest.xml"/>
    <script src="//common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script>var currentBlogId=58412;var currentBlogApp='lixinjie',cb_enable_mathjax=false;var isLogined=false;</script>
    <script src="/bundles/blog-common.js?v=smtcUT5dhdu_5eEO8CKHYoVc7DPLgEBGzp6zKkstlzg1" type="text/javascript"></script>
</head>
<body>
<a name="top"></a>


<!--done-->
<div id="header">
	
<!--done-->
<div class="header">
	<div class="headerText">
		<a id="Header1_HeaderTitle" class="headermaintitle" href="https://www.cnblogs.com/lixinjie/">李新杰的博客园</a><br>
		知识改变命运 教育改变中国 代码改变世界
	</div>
</div>

</div>

<div id="mytopmenu" >
	
		<div id="mylinks"><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">博客园</a> &nbsp;
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/lixinjie/">首页</a> &nbsp;
<a id="blog_nav_newpost" class="menu" rel="nofollow" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">新随笔</a> &nbsp;
<a id="blog_nav_contact" class="menu" rel="nofollow" href="https://msg.cnblogs.com/send/%E7%BC%96%E7%A8%8B%E6%96%B0%E8%AF%B4%28%E6%9D%8E%E6%96%B0%E6%9D%B0%29">联系</a> &nbsp;
<a id="blog_nav_rss" class="menu" href="https://www.cnblogs.com/lixinjie/rss">订阅</a><a id="blog_nav_rss_image" href="https://www.cnblogs.com/lixinjie/rss"><img src="//www.cnblogs.com/images/xml.gif" alt="订阅" /></a>&nbsp;
<a id="blog_nav_admin" class="menu" rel="nofollow" href="https://i.cnblogs.com/">管理</a>
</div>
		<DIV id="mystats"><div id="blog_stats">
随笔-73&nbsp;
评论-933&nbsp;
文章-0&nbsp;
<!--trackbacks-0-->
</div></DIV>
	
</div>
<div id="centercontent" >
	
        
<!--done-->


<div class="day">
	<div class = "dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl00_ImageLink" Title="Day link" href="http://www.cnblogs.com/lixinjie/archive/2020/03/23.html"><img src="/skins/sea/images/title_post.gif" border=0 align=absmiddle></a>
		&nbsp;
		2020年3月23日		  
	</div>

	
			<div class = "postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl00_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/lixinjie/p/combine-reflect-and-oo-in-java.html">【Java】反射调用与面向对象结合使用产生的惊艳</a>
			</div>
			<div class="cnblogs-post-body" id="postlist_postbody_12043902">正文内容加载中...</div><script type="text/javascript">getBlogPostBody(12043902);</script>
			<div class = "postDesc">posted @ 2020-03-23 08:50 编程新说(李新杰) 阅读(202) 评论(0)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=12043902" rel="nofollow">编辑</a></div>
		
</div>

<div class="day">
	<div class = "dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl01_ImageLink" Title="Day link" href="http://www.cnblogs.com/lixinjie/archive/2020/03/12.html"><img src="/skins/sea/images/title_post.gif" border=0 align=absmiddle></a>
		&nbsp;
		2020年3月12日		  
	</div>

	
			<div class = "postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl01_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/lixinjie/p/java-8-time-system.html">迄今为止最硬核的「Java8时间系统」设计原理与使用方法</a>
			</div>
			<div class="c_b_p_desc">摘要: 为了使本篇文章更容易让读者读懂，我特意写了上一篇《任何人都需要知道的「世界时间系统」构成原理，尤其开发人员》的科普文章。本文才是重点，绝对要读，走起！ Java平台时间系统的设计方案几乎任何事物都会有“起点”这样的概念，比如人生的起点就是我们出生的那一刻。Java平台时间系统的起点就是世界时间（UT<a href="https://www.cnblogs.com/lixinjie/p/java-8-time-system.html" class="c_b_p_desc_readmore">阅读全文</a></div>
			<div class = "postDesc">posted @ 2020-03-12 10:08 编程新说(李新杰) 阅读(1497) 评论(23)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=12467372" rel="nofollow">编辑</a></div>
		
</div>

<div class="day">
	<div class = "dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl02_ImageLink" Title="Day link" href="http://www.cnblogs.com/lixinjie/archive/2020/03/09.html"><img src="/skins/sea/images/title_post.gif" border=0 align=absmiddle></a>
		&nbsp;
		2020年3月9日		  
	</div>

	
			<div class = "postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl02_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/lixinjie/p/the-construct-of-world-time.html">任何人都需要知道的「世界时间系统」构成原理，尤其开发人员</a>
			</div>
			<div class="c_b_p_desc">摘要: 下面是同一时刻的中国时间、英国时间和美国时间： 此时此刻，中国的人们刚午休完准备开始下午的工作，英国的人们已经睡了一晚上正准备早晨起床，美国的人们有的还在熬夜、有的已经进入梦乡，但不管睡没睡，他们都即将迎来新的一天。为什么会是这样的呢？本文将告诉你完整的答案，记住本文之后，够你受用一辈子，至少也会是<a href="https://www.cnblogs.com/lixinjie/p/the-construct-of-world-time.html" class="c_b_p_desc_readmore">阅读全文</a></div>
			<div class = "postDesc">posted @ 2020-03-09 09:31 编程新说(李新杰) 阅读(803) 评论(6)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=12446864" rel="nofollow">编辑</a></div>
		
</div>

<div class="day">
	<div class = "dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl03_ImageLink" Title="Day link" href="http://www.cnblogs.com/lixinjie/archive/2019/12/30.html"><img src="/skins/sea/images/title_post.gif" border=0 align=absmiddle></a>
		&nbsp;
		2019年12月30日		  
	</div>

	
			<div class = "postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl03_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/lixinjie/p/graduated-for-10-years.html">毕业10年，我有话说</a>
			</div>
			<div class="c_b_p_desc">摘要: 只有细节能够决定成败吗？2019年马上就要过去了，突然意识到自己09年毕业，到今年已经整整过去10年了。真是岁月如梭、光阴似箭啊。从大一学C语言后，就开始用C语言写练习，到如今也算写了14年的代码了。记得刚工作时，大家讨论的内容是用table布局呢还是用div布局，10年后的今天再来看看这些事情，可<a href="https://www.cnblogs.com/lixinjie/p/graduated-for-10-years.html" class="c_b_p_desc_readmore">阅读全文</a></div>
			<div class = "postDesc">posted @ 2019-12-30 10:24 编程新说(李新杰) 阅读(4186) 评论(41)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=12043899" rel="nofollow">编辑</a></div>
		
</div>

<div class="day">
	<div class = "dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl04_ImageLink" Title="Day link" href="http://www.cnblogs.com/lixinjie/archive/2019/12/25.html"><img src="/skins/sea/images/title_post.gif" border=0 align=absmiddle></a>
		&nbsp;
		2019年12月25日		  
	</div>

	
			<div class = "postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl04_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/lixinjie/p/playing-springboot-009.html">【玩转SpringBoot】异步任务执行与其线程池配置</a>
			</div>
			<div class="c_b_p_desc">摘要: 同步代码写起来简单，但就是怕遇到耗时操作，会影响效率和吞吐量。此时异步代码才是王者，但涉及多线程和线程池，以及异步结果的获取，写起来颇为麻烦。不过在遇到SpringBoot异步任务时，这个问题就不存在了。因为Spring家族是最替用户考虑的。结果就是，像同步一样简单，像异步一样强大。众所熟悉的同步代<a href="https://www.cnblogs.com/lixinjie/p/playing-springboot-009.html" class="c_b_p_desc_readmore">阅读全文</a></div>
			<div class = "postDesc">posted @ 2019-12-25 09:21 编程新说(李新杰) 阅读(364) 评论(0)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=12043868" rel="nofollow">编辑</a></div>
		
</div>

<div class="day">
	<div class = "dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl05_ImageLink" Title="Day link" href="http://www.cnblogs.com/lixinjie/archive/2019/12/24.html"><img src="/skins/sea/images/title_post.gif" border=0 align=absmiddle></a>
		&nbsp;
		2019年12月24日		  
	</div>

	
			<div class = "postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl05_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/lixinjie/p/playing-springboot-008.html">【玩转SpringBoot】通过事件机制参与SpringBoot应用的启动过程</a>
			</div>
			<div class="c_b_p_desc">摘要: 生命周期和事件监听一个应用的启动过程和关闭过程是归属到“生命周期”这个概念的范畴。典型的设计是在启动和关闭过程中会触发一系列的“事件”，我们只要监听这些事件，就能参与到这个过程中来。要想监听事件，首先得有事件监听器，就是常说的Listener。下面就是Spring提供的监听器，如下图01： 按规定所<a href="https://www.cnblogs.com/lixinjie/p/playing-springboot-008.html" class="c_b_p_desc_readmore">阅读全文</a></div>
			<div class = "postDesc">posted @ 2019-12-24 09:10 编程新说(李新杰) 阅读(346) 评论(0)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=12043862" rel="nofollow">编辑</a></div>
		
</div>

<div class="day">
	<div class = "dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl06_ImageLink" Title="Day link" href="http://www.cnblogs.com/lixinjie/archive/2019/12/23.html"><img src="/skins/sea/images/title_post.gif" border=0 align=absmiddle></a>
		&nbsp;
		2019年12月23日		  
	</div>

	
			<div class = "postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl06_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/lixinjie/p/playing-springboot-007.html">【玩转SpringBoot】SpringBoot应用的启动过程一览表</a>
			</div>
			<div class="c_b_p_desc">摘要: SpringBoot应用的启动方式很简单，就一行代码，如下图01： 其实这行代码背后主要执行两个方法，一个是构造方法，一个是run方法。构造方法主要内容就是收集一些数据，和确认一些信息。如下图02： 真正的执行要从run方法开始，为此，SpringBoot特意定义了一个监听器，专门监听这个run方法<a href="https://www.cnblogs.com/lixinjie/p/playing-springboot-007.html" class="c_b_p_desc_readmore">阅读全文</a></div>
			<div class = "postDesc">posted @ 2019-12-23 08:28 编程新说(李新杰) 阅读(353) 评论(0)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=12043860" rel="nofollow">编辑</a></div>
		
</div>

<div class="day">
	<div class = "dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl07_ImageLink" Title="Day link" href="http://www.cnblogs.com/lixinjie/archive/2019/12/22.html"><img src="/skins/sea/images/title_post.gif" border=0 align=absmiddle></a>
		&nbsp;
		2019年12月22日		  
	</div>

	
			<div class = "postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl07_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/lixinjie/p/playing-springboot-006.html">【玩转SpringBoot】让错误处理重新由web服务器接管</a>
			</div>
			<div class="c_b_p_desc">摘要: 其实web服务器是会处理错误的在web.xml还是随处可见的年代时（确实有点老黄历了），下面的这些配置应该都不陌生。根据错误代码处理错误，如下图01： 根据异常类型处理错误，如下图02： 不过我们更加熟悉的应该是SpringMVC的统一异常处理。如下图03： 看到@ControllerAdvice注<a href="https://www.cnblogs.com/lixinjie/p/playing-springboot-006.html" class="c_b_p_desc_readmore">阅读全文</a></div>
			<div class = "postDesc">posted @ 2019-12-22 09:17 编程新说(李新杰) 阅读(202) 评论(0)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=12043859" rel="nofollow">编辑</a></div>
		
</div>

<div class="day">
	<div class = "dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl08_ImageLink" Title="Day link" href="http://www.cnblogs.com/lixinjie/archive/2019/12/21.html"><img src="/skins/sea/images/title_post.gif" border=0 align=absmiddle></a>
		&nbsp;
		2019年12月21日		  
	</div>

	
			<div class = "postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl08_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/lixinjie/p/playing-springboot-005.html">【玩转SpringBoot】翻身做主人，一统web服务器</a>
			</div>
			<div class="c_b_p_desc">摘要: 寄人篱下的日子一直以来受传统影响，我们的web工程总是打成war包，然后放入tomcat的webapps目录下面。如下图01： 当tomcat启动时，会去解压war包，然后运行web工程。这大家都非常熟悉了。用一个抽象的图形表示，就是这样子。如下图02： 在一个大大的tomcat里面，有一个小小的w<a href="https://www.cnblogs.com/lixinjie/p/playing-springboot-005.html" class="c_b_p_desc_readmore">阅读全文</a></div>
			<div class = "postDesc">posted @ 2019-12-21 10:56 编程新说(李新杰) 阅读(422) 评论(2)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=12043857" rel="nofollow">编辑</a></div>
		
</div>

<div class="day">
	<div class = "dayTitle">
		<a id="homepage1_HomePageDays_DaysList_ctl09_ImageLink" Title="Day link" href="http://www.cnblogs.com/lixinjie/archive/2019/12/20.html"><img src="/skins/sea/images/title_post.gif" border=0 align=absmiddle></a>
		&nbsp;
		2019年12月20日		  
	</div>

	
			<div class = "postTitle">
				<a id="homepage1_HomePageDays_DaysList_ctl09_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/lixinjie/p/playing-springboot-004.html">【玩转SpringBoot】看似复杂的Environment其实很简单</a>
			</div>
			<div class="c_b_p_desc">摘要: 喜欢写代码，讨厌配环境我相信这十个字的小标题代表了大多数码农的心声。十年前读大学时，学校开设了C语言还有C++。但是学习这两种语言，对于新手来说非常没有成就感。于是我就在校门口买个光盘，装个VS（宇宙第一IDE），还有离线中文版MSDN（最牛的帮助文档），万事已俱备。学习C#语法，看类的API，然后<a href="https://www.cnblogs.com/lixinjie/p/playing-springboot-004.html" class="c_b_p_desc_readmore">阅读全文</a></div>
			<div class = "postDesc">posted @ 2019-12-20 09:19 编程新说(李新杰) 阅读(857) 评论(2)  <a href ="https://i.cnblogs.com/EditPosts.aspx?postid=12043853" rel="nofollow">编辑</a></div>
		
</div>
<div class="topicListFooter"><div id="nav_next_page"><a href="https://www.cnblogs.com/lixinjie/default.html?page=2">下一页</a></div></div>

    
</div>
<div id="leftcontent">
	
		<DIV id="leftcontentcontainer">
			
<!--done-->
<div class="newsItem">
	<div id="blog-news"></div><script type="text/javascript">loadBlogNews();</script>
</div>

			<div id="blog-calendar" style="display:none"></div><script type="text/javascript">loadBlogDefaultCalendar();</script><br>
			<div id="blog-sidecolumn"></div><script type="text/javascript">loadBlogSideColumn();</script></DIV>
	
</div>

<!--done-->
<div class="footer">
	Powered by: <a href="http://www.cnblogs.com">博客园</a>	模板提供：<a href="http://blog.hjenglish.com">沪江博客</a>
	Copyright &copy;2020 编程新说(李新杰)
</div>




</body>
</html>
