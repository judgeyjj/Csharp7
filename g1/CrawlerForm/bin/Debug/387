<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin-when-crossorigin" />
    
    
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>1024星球 - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=Y1yBNCRf3ODEjYGJn208vPUnnX-rIyYVsZ75AvRbzGM" />
    <link id="MainCss" rel="stylesheet" href="/skins/codinglife/bundle-codinglife.min.css?v=2uJkpdACLVfstRQ7zeCFK19brTwKuDEaNBLgKz9nm3A" />
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/codinglife/bundle-codinglife-mobile.min.css?v=DwDRKMd1bmjnJZ4iQqrTCO9QLlYb6OZaUAzHoHIIihg" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/idbeny/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/idbeny/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/idbeny/wlwmanifest.xml" />
    <script>
        var currentBlogId = 681591;
        var currentBlogApp = 'idbeny';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'CodingLife';
        var visitorUserId = '';
    </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=2Mic1VLeHXarpdzASbXqFMIMVLEBiWXNO5yiTHUcmhw"></script>
    
    
    
</head>
<body class="has-navbar">
    <a name="top"></a>
        <div id="bannerbar" class="bannerbar-mobile formobile">
            <a href="https://www.cnblogs.com/cmt/p/14797594.html" onclick="ga('send', 'event', 'Link', 'click', 'aliyun-summit-blog-bannerbar-mobile')">
                <img src="https://img2020.cnblogs.com/blog/35695/202105/35695-20210522072302481-117260882.jpg" alt="" />
            </a>
        </div>
    <div id="top_nav" class="navbar forpc">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding"><a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a></li>
                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="/images/aggsite/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=J0WS2P2iPgaIVgXxcAhliw4AFZIpaTWxtdoNAv9eiCA" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    
    <!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/idbeny/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/idbeny/">1024星球</a>
</h1>
<h2></h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/idbeny/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/1024%E6%98%9F%E7%90%83">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/idbeny/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			<div id="blog_stats_place_holder"><script>loadBlogStats();</script></div>
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		





		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/idbeny/archive/2021/05/27.html">2021年5月27日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/idbeny/p/swift-syntax-property.html">
    <span>
        Swift系列九 - 属性
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：任何一门语言都有属性的概念。Swift中的属性是怎么的呢？ 一、属性 Swift中跟实例相关的属性可以分为2大类：存储属性和计算属性。 1.1. 存储属性（Stored Property） 特点： 类似于成员变量的概念； 存储在实例的内存中； 结构体、类可以定义存储属性； 枚举不可以定义存储属性。         <a href="https://www.cnblogs.com/idbeny/p/swift-syntax-property.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-05-27 09:52
1024星球
<span data-post-id="14737930" class="post-view-count">阅读(44)</span> 
<span data-post-id="14737930" class="post-comment-count">评论(0)</span> 
<span data-post-id="14737930" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14737930" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/idbeny/archive/2021/05/26.html">2021年5月26日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/idbeny/p/swift-syntax-closure.html">
    <span>
        Swift系列八 - 闭包
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：什么是闭包？闭包表达式又是什么？ 一、闭包表达式（Closure Expression） 在Swift中，可以通过func定义一个函数，也可以通过闭包表达式定义一个函数。 1.1. 闭包表达式的格式 { (参数列表) -&amp;gt; 返回值类型 in 函数体代码 } 1.2. 闭包表达式和函数的比较 定        <a href="https://www.cnblogs.com/idbeny/p/swift-syntax-closure.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-05-26 17:45
1024星球
<span data-post-id="14737920" class="post-view-count">阅读(9)</span> 
<span data-post-id="14737920" class="post-comment-count">评论(0)</span> 
<span data-post-id="14737920" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14737920" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/idbeny/p/swift-syntax-assembly-value-type.html">
    <span>
        Swift系列七 - 汇编分析值类型
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：通过汇编分下值类型的本质。 一、值类型 值类型赋值给var，let或者给参数传参，是直接将所有内容拷贝一份。类似于对文件进行复制粘贴操作，产生了全新的文件副本，属于深拷贝（deep copy）。 示例： func testStruct() { struct Point { var x: Int va        <a href="https://www.cnblogs.com/idbeny/p/swift-syntax-assembly-value-type.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-05-26 13:45
1024星球
<span data-post-id="14737910" class="post-view-count">阅读(123)</span> 
<span data-post-id="14737910" class="post-comment-count">评论(0)</span> 
<span data-post-id="14737910" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14737910" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/idbeny/archive/2021/05/08.html">2021年5月8日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/idbeny/p/swift-syntax-struct-class.html">
    <span>
        Swift系列六 - 结构体与类的本质区别
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：在Swift标准库中，绝大多数的公开类型都是结构体，而枚举和类只占很小一部分。 一、结构体 常见的Bool、Int、Double、String、Array、Dictionary等常见类型都是结构体。 自定义结构体： struct Date { var year: Int; var month: In        <a href="https://www.cnblogs.com/idbeny/p/swift-syntax-struct-class.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-05-08 16:29
1024星球
<span data-post-id="14737900" class="post-view-count">阅读(45)</span> 
<span data-post-id="14737900" class="post-comment-count">评论(0)</span> 
<span data-post-id="14737900" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14737900" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/idbeny/p/swift-syntax-optional.html">
    <span>
        Swift系列五 - 可选项
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：可选项，一般也叫可选类型，它允许将值设为nil。 一、定义可选项 平时开发中，如果我们需要把一个变量置空时只需要把变量赋值一个nil即可： 上面尝试后不行，那怎么把一个变量置空呢？ 答案：把变量设置可选类型即可 如何定义可选类型（可选项）？ 在类型后面加个问号?； 定义可选项后变量默认就是nil。         <a href="https://www.cnblogs.com/idbeny/p/swift-syntax-optional.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-05-08 14:59
1024星球
<span data-post-id="14737883" class="post-view-count">阅读(116)</span> 
<span data-post-id="14737883" class="post-comment-count">评论(0)</span> 
<span data-post-id="14737883" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14737883" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/idbeny/p/swift-syntax-enum.html">
    <span>
        Swift系列四 - 枚举
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：适度给类型起别名能够让代码更加易懂，开发效率更高，可维护性更好。 一、typealias(别名) typealias用来给类型起别名。 typealias Byte = Int8 typealias Short = Int16 typealias Long = Int64 typealias Dat        <a href="https://www.cnblogs.com/idbeny/p/swift-syntax-enum.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-05-08 09:25
1024星球
<span data-post-id="14737873" class="post-view-count">阅读(26)</span> 
<span data-post-id="14737873" class="post-comment-count">评论(0)</span> 
<span data-post-id="14737873" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14737873" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/idbeny/archive/2021/05/07.html">2021年5月7日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/idbeny/p/swift-syntax-function.html">
    <span>
        Swift系列三 - 函数
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：函数在任何语言中都是存在的，Swift中函数更加灵活。 一、函数的定义 1.1. 有返回值（形参默认是let，也只能是let） func pi() -&amp;gt; Double { return 3.14 } print(pi()) // 输出：3.14 func sum(v1: Int, v2: In        <a href="https://www.cnblogs.com/idbeny/p/swift-syntax-function.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-05-07 10:58
1024星球
<span data-post-id="14737869" class="post-view-count">阅读(23)</span> 
<span data-post-id="14737869" class="post-comment-count">评论(0)</span> 
<span data-post-id="14737869" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14737869" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/idbeny/p/swift-syntax-loop.html">
    <span>
        Swift系列二 - 循环控制
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：一、if-else if后面的条件可以省略小括号 条件后面的大括号不可以省略 let age = 10 if age &gt;= 18 { print(&quot;大学&quot;) } else if age &gt;= 16 { print(&quot;高中&quot;) } else { print(&quot;义务&quot;) } if后面的条件只能是Bool        <a href="https://www.cnblogs.com/idbeny/p/swift-syntax-loop.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-05-07 09:51
1024星球
<span data-post-id="14737861" class="post-view-count">阅读(46)</span> 
<span data-post-id="14737861" class="post-comment-count">评论(0)</span> 
<span data-post-id="14737861" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14737861" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/idbeny/archive/2021/04/30.html">2021年4月30日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/idbeny/p/swift-syntax-data-types.html">
    <span>
        Swift系列一 - 数据类型
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：如果你习惯了OC的语法，第一次接触Swift的语法可能会有点抗拒，因为Swift的语法有点怪。但如果你有前端的基础，学Swift可能会有点吃力，如果你有C++的基础可能会学得比较快点。不管你有什么样的语法基础，学会Swift后你都会觉得这是门优秀的语言，总之相比哥哥OC更简洁，更高效。现在Swift        <a href="https://www.cnblogs.com/idbeny/p/swift-syntax-data-types.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-04-30 09:35
1024星球
<span data-post-id="14720830" class="post-view-count">阅读(17)</span> 
<span data-post-id="14720830" class="post-comment-count">评论(0)</span> 
<span data-post-id="14720830" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14720830" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>



<div class="topicListFooter">
    <div id="nav_next_page">
        
    

    </div>    
</div>






<script>
    updatePostStats(
        $(".post-view-count").map(function () { return this.dataset.postId }).get(),
        function(id, count) { $(".post-view-count[data-post-id=" + id + "]").text("阅读(" + count + ")") },
        function(id, count) { $(".post-comment-count[data-post-id=" + id + "]").text("评论(" + count + ")") },
        function(id, count) { $(".post-digg-count[data-post-id=" + id + "]").text("推荐(" + count + ")") });
</script>
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->
	<div id="sideBar">
		<div id="sideBarMain">
			<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>
<div id="sidebar_c3"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2021 1024星球
<br /><span id="poweredby">Powered by .NET 5.0 on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    

    <input type="hidden" id="antiforgery_token" value="CfDJ8L-rpLgFVEJMgssCVvNUAjusaj5jlaBy0qZ1_criMrzgadbc_gQ6poDULJKV1ZA6mUFwtlEZ7UW6QBDL3nzAA8TCvMQKB9yU5aUbmCjqllU_FXsmIWK7GnnA6KBST5_IYqTQnLKVKwE9nCG4xFXNeVQ" />
</body>
</html>
